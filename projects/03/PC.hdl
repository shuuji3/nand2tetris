// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Not(in=reset, out=notReset);
    Not(in=load, out=notLoad);
    Not(in=inc, out=notInc);

    And(a=notReset, b=notLoad, out=selIn1);

    And(a=notReset, b=load, out=selTmpA);
    And(a=notReset, b=notLoad, out=tmp);
    And(a=tmp, b=notInc, out=selTmpB);
    Or(a=selTmpA, b=selTmpB, out=selIn0);

    Inc16(in=memOut, out=memOutPlus1);
    Mux4Way16(a=false, b=in, c=memOutPlus1, d=memOut, sel[0]=selIn0, sel[1]=selIn1, out=memIn);
    Register(in=memIn, load=true, out=memOut);
    And16(a=memOut, b=true, out=out);
}
